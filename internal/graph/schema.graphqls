type Image {
  "Ширина изображения."
  width: Int!
  "Высота изображения."
  height: Int!
  "Ссылка для получения изображения."
  url: String!
  "Увеличение изображения."
  scale: Int!
}

type CurrencyConvertRate {
  "Значение, которое используется для конвертации из одной валюты в другую."
  rate: Float!
  "Дата последнего обновления курса этой валюты."
  updatedAt: String!
}

type CurrencyDiff {
  "Абсолютное значение изменения курса валюты относительно предыдущего дня."
  absolute: Float!
  "Процентное значение изменения курса валюты относительно предыдущего дня."
  percents: Float!
}

type Currency {
  "Аббревиатура валюты."
  id: String!
  "Наименование валюты."
  title: String!
  "Символ валюты."
  sign: String!
  "Список изображений валюты."
  images: [Image!]!
  "Информация о курсе обмена этой валюты."
  convertRate: CurrencyConvertRate
  "Абсолютное значение изменения курса валюты относительно предыдущего дня."
  diff: CurrencyDiff
}

type User {
  "Идентификатор пользователя."
  id: String!
  "Список отслеживаемых пользователем валют."
  observedCurrencies: [Currency!]!
  "Базовая валюта пользователя."
  baseCurrency: Currency!
  "Идентификатор базовой валюты пользователя."
  baseCurrencyId: String!
}

type Jwt {
  "Значение токена."
  token: String!
  "Дата истечения этого токена."
  expires_at: String!
}

type AuthResult {
  "Токен для доступа к методам API."
  access_token: Jwt!
  "Токен для обновления токена доступа."
  refresh_token: Jwt!
}

type Query {
  "Возвращает список всех известных валют."
  currencies: [Currency!]!
#  """
#  Возвращает график изменения курса валюты.
#  """
#  currencyGraph(currencyId: String!): CurrencyGraph!
  "Возвращает информацию о текущем пользователе."
  user: User
}

type Mutation {
  "Производит аутентификацию пользователя через параметры запуска Telegram."
  authenticateTg(initData: String! fp: String!): AuthResult!
  "Добавляет валюту в список отслеживаемых пользователем."
  addUserObsCurrency(currencyId: String!): Boolean!
  "Удаляет валюту из списка отслеживаемых пользователем."
  removeUserObsCurrency(currencyId: String!): Boolean!
  "Обновляет сессию пользователя по переданному refresh token-у."
  refreshSession(refreshToken: String! fp: String!): AuthResult!
  """
  Устанавливает новую валюту в качестве избранной для текущего
  пользователя.
  """
  setUserBaseCurrency(currencyId: String!): Boolean!
}

#
#"""
#Элемента графика изменения курса валюты.
#"""
#type CurrencyGraphItem {
#  """
#  Значение курса валюты.
#  """
#  value: Float!
#  """
#  Дата, в которую это значение было достигнуто.
#  """
#  timestamp: Int!
#}
#
#"""
#График изменения курса валюты.
#"""
#type CurrencyGraph {
#  """
#  Список элементов графика.
#  """
#  items: [CurrencyGraphItem!]!
#}